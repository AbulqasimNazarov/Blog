@model IEnumerable<BlogApp.Core.Topic.Models.Topic>

@{
    ViewData["Title"] = "Blogs";
    var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
    var isBlogDetail = ViewBag.IsBlogDetail as bool? ?? false;
}

<div class="blog-page">
    <div class="header">
        <div class="header-block left-side">
            <div class="logo">
                <img src="~/Assets/IMG/LogoImg.png" alt="Logo" />
            </div>
            <div class="search-container">
                <form id="searchForm" class="search-bar" method="get" action="api/Blog/SearchBlogsByName">
                    <input type="text" name="query" placeholder="Search">
                    <button type="submit">
                        <img src="~/Assets/IMG/search-icon.png" alt="Search">
                    </button>
                </form>
            </div>
        </div>
        <div class="header-block right-side">
            <div id="addBlogButton" class="add-blog add-blog-button">
                <a href="#">
                    <img src="~/Assets/IMG/Plus.png" alt="Plus">
                    Add blog
                </a>
            </div>
            <div id="addBlogModal" class="modal">
                <div class="modal-content">
                    <span class="close">&times;</span>
                    <h2>Add Blog</h2>
                    <form class="addBlogForm" method="post" action="/api/Blog/CreateBlog" enctype="multipart/form-data">
                        <div class="blog-picture">
                            <label class="blog-picture-title" for="pictureUrl">Add picture:</label>
                            <div class="custom-file">
                                <input type="file" name="image" class="custom-file-input" required>
                                <label class="custom-file-label" for="picture">Choose file</label>
                            </div>
                        </div>
                        <div class="blog-title">
                            <label for="title">Title:</label>
                            <input type="text" class="input-title" name="Title" required>
                        </div>
                        <div class="blog-topic">
                            <label for="topicId">Topic:</label>
                            <select class="topicId" name="TopicId" required>
                                @if (Model != null)
                                {
                                    @foreach (var topic in Model)
                                    {
                                        <option value="@topic.Id">@topic.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="blog-text">
                            <label for="text">Text:</label>
                            <textarea name="Text" required></textarea>
                        </div>
                        <button type="submit">Add Blog</button>
                    </form>
                </div>
            </div>
            <div class="icons">
                <a href="#">
                    <img src="~/Assets/IMG/ChatCircleDots.png" alt="">
                </a>
                <a href="#">
                    <img src="~/Assets/IMG/Export.png" alt="">
                </a>
            </div>
            <div class="profile">
                <a href="#">
                    <img src="~/Assets/IMG/profile_image.png" alt="profile">
                </a>
            </div>
        </div>
    </div>
    <div class="menu" id="menu" data-first-topic-id="@Model?.FirstOrDefault()?.Id">
        <div class="menu-content menu-items dragscroll">
            @if (Model != null)
            {
                @foreach (var topic in Model)
                {
                    <a class="menu-item" id="topic-@topic.Id" href="javascript:void(0);"
                        onclick="setActiveTopic(@topic.Id)">@topic.Name</a>
                }
            }
        </div>
    </div>

    <div class="blog-container">
        <div class="blog-list" id="blog-list" style="display: block;"></div>

        <div id="blogDetail" class="blog-detail" style="display: none;"></div>

        <div class="blog-right-side">
            @if (!isBlogDetail) 
            {
                <div class="recommendation-block">
                    <h2>Recommended topics</h2>
                    <div class="recommendation-block-topics">
                        <button>Photography</button>
                        <button>Poetry</button>
                        <button>Space</button>
                        <button>Money</button>
                    </div>
                </div>
                <div class="follow-block">
                    <h2>Who to follow</h2>
                    <div class="person">
                        <h5>Aamatullah Rajkotwala</h5>
                        <p>I like to write about movies, literature, pop culture and...</p>
                        <button class="follow-button">Follow</button>
                    </div>
                    <div class="person">
                        <h5>Marvel Gomulya</h5>
                        <p>Indonesian Builder! Writings about philosophy, human...</p>
                        <button class="follow-button">Follow</button>
                    </div>
                    <div class="person">
                        <h5>Natasha MH</h5>
                        <p>Writes on life, Travel, inspiration and Culture.</p>
                        <button class="follow-button">Follow</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const userId = '@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value';

            fetch(`/Blog/Index/?userId=${userId}`)
                .then(response => response.json())
                .then(topics => {
                    const menuContent = document.querySelector('.menu-content');
                    menuContent.innerHTML = '';

                    topics.forEach(topic => {
                        const topicItem = document.createElement('a');
                        topicItem.className = 'menu-item';
                        topicItem.id = 'topic-' + topic.Id;
                        topicItem.href = 'javascript:void(0);';
                        topicItem.textContent = topic.Name;
                        topicItem.onclick = function () {
                            setActiveTopic(topic.Id);
                        };
                        menuContent.appendChild(topicItem);
                    });
                })
                .catch(error => {
                    console.error('Error fetching topics:', error);
                });
        });

        document.getElementById('searchForm').addEventListener('submit', function (event) {
            event.preventDefault();
            console.log('Form submitted');

            const query = document.querySelector('input[name="query"]').value;
            console.log('Query:', query);

            fetch(`/api/Blog/SearchBlogsByName?name=${encodeURIComponent(query)}`, {
                method: 'GET'
            })
            .then(response => {
                console.log('Response status:', response.status);
                if (!response.ok) {
                    return response.text().then(text => { throw new Error(text); });
                }
                return response.json();
            })
            .then(data => {
                console.log('Data received:', data);

                const blogList = document.getElementById('blog-list');
                blogList.innerHTML = '';

                document.querySelectorAll('.menu-item').forEach(item => {
                    item.classList.remove('active');
                });

                data.forEach(blog => {
                    const blogItem = `
                    <a href="/Blog/${blog.id}" class="blog-link" data-id="${blog.id}">
                        <div class="blog-item">
                            <div class="content">
                                <div class="author">${blog.user ? blog.user.name : 'Unknown'}</div>
                                <div class="title">${blog.title}</div>
                                <div class="date">${new Date(blog.creationDate).toLocaleDateString()}</div>
                            </div>
                            <img class="blog-img" src="/Blog/Image/${blog.id}" alt="${blog.title}">
                        </div>
                    </a>`;
                    blogList.innerHTML += blogItem;
                });
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to search blogs');
            });
        });

        document.querySelector('.addBlogForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const formData = new FormData(this);

            fetch('/api/Blog/CreateBlog', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (response.ok) {
                        alert('Blog created successfully');
                    } else {
                        return response.text().then(text => { throw new Error(text); });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });

        document.addEventListener('DOMContentLoaded', (event) => {
            const firstTopicId = document.getElementById('menu').getAttribute('data-first-topic-id');
            if (firstTopicId) {
                setActiveTopic(firstTopicId);
            }
        });

        function setActiveTopic(topicId) {
            document.querySelectorAll('.menu-item').forEach(item => {
                item.classList.remove('active');
            });
            document.getElementById('topic-' + topicId).classList.add('active');

            fetch('/api/GetBlogsByTopic?topicId=' + topicId)
                .then(response => response.json())
                .then(blogs => {
                    let blogList = document.getElementById('blog-list');
                    blogList.innerHTML = '';
                    blogs.forEach(blog => {
                        let blogItem = `
                        <a href="/Blog/${blog.id}" class="blog-link" data-id="${blog.id}">
                            <div class="blog-item">
                                <div class="content">
                                    <div class="user-profile">
                                        <div class="logo">
                                            <img src="~/Assets/IMG/LogoImg.png" alt="Logo" />
                                        </div>
                                        <div class="author">${blog.User ? blog.User.Name : 'Abulqasim'}</div>
                                    </div>
                                    <div class="title">${blog.title}</div>
                                    <div class="date">${new Date(blog.creationDate).toLocaleDateString()}</div>
                                </div>
                                <img class="blog-img" src="/Blog/Image/${blog.id}" alt="${blog.title}">
                            </div>
                        </a>`;
                        blogList.innerHTML += blogItem;
                    });
                })
                .catch(error => {
                    console.error('Error fetching blogs by topic:', error);
                });
        }

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.blog-link').forEach(link => {
                link.addEventListener('click', function (event) {
                    event.preventDefault();
                    const blogId = this.getAttribute('data-id');
                    const url = `/Blog/${blogId}`;

                    fetch(url)
                        .then(response => response.json())
                        .then(blog => {
                            document.querySelector('.blog-list').style.display = 'none';
                            document.querySelector('.blog-detail').style.display = 'block';

                            const blogDetail = document.getElementById('blogDetail');
                            blogDetail.innerHTML = `
                            <h1>${blog.title}</h1>
                            <p>${new Date(blog.creationDate).toLocaleDateString()}</p>
                            <p>Author: ${blog.user ? blog.user.name : 'Unknown'}</p>
                            <img src="${blog.pictureUrl}" alt="${blog.title}">
                            <div class="blog-content">
                                <p>${blog.text}</p>
                            </div>
                        `;
                        })
                        .catch(error => {
                            console.error('Error fetching blog details:', error);
                        });
                });
            });
        });
    </script>
}