@model IEnumerable<BlogApp.Core.Topic.Models.Topic>

@{
    ViewData["Title"] = "Choose Tags";
    var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
}


<style>
    .topic-button {
        background-color: white;
        border: 1px solid #ccc;
        padding: 10px;
        cursor: pointer;
    }

    .topic-button.selected {
        background-color: #9BD21C;
        color: white;
    }
</style>


<div class="topic-page" data-user-id="@userId">
    <div class="container">
        <div class="wrapper">
            <header class="header">
                <img src="../../Assets/IMG/LogoImg.png" alt="Logo" />
            </header>
            <main class="main-content">
                <h2>What are you interested in?</h2>
                <p>Choose three or more.</p>
                <div class="topics">
                    @if (base.Model != null)
                    {
                        foreach (var topic in base.Model)
                        {
                            <button class="topic-button" data-id="@topic.Id" onclick="toggleTopic(this)">@topic.Name</button>
                        }
                    }
                    else
                    {
                        <p>No topics available.</p>
                    }
                </div>
                <button class="next-button" onclick="submitSelectedTopics()">Next</button>
            </main>
            <div class="Copyright tegs-copyright">
                <div>Copyright Â© 2023</div>
            </div>
        </div>
    </div>
</div>

<script>
    let selectedTopics = [];

    function toggleTopic(button) {
        const topicId = button.getAttribute('data-id');
        if (selectedTopics.includes(topicId)) {
            selectedTopics = selectedTopics.filter(id => id !== topicId);
            button.classList.remove('selected');
        } else {
            selectedTopics.push(topicId);
            button.classList.add('selected');
        }
        console.log('Selected Topics:', selectedTopics);
    }

    function submitSelectedTopics() {
        if (selectedTopics.length >= 3) {
            const userId = document.querySelector('.topic-page').getAttribute('data-user-id');

            fetch(`/Topic/CreatePreferences/${userId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(selectedTopics)
            })
            .then(response => {
                if (response.ok) {
                    window.location.href = `/Blog/Index?userId=${userId}`;
                } else {
                    throw new Error('Something went wrong');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred. Please try again.');
            });
        } else {
            alert('Please choose at least three topics.');
        }
    }
</script>


